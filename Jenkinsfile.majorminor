pipeline {
    agent any
    tools {
                maven 'mvn39'
                } 
    environment {
        KUBECONFIG = credentials('rancher-cred-dev')
        NAMESPACE = 'default'
    }
    stages {
        stage('Build And Push to Artifactory') {
            steps {
script {    
    sh """      
       pomVersion=\$(cat pom.xml | grep SNAPSHOT | sed -n "s/.*<version>\\(.*\\)-SNAPSHOT<\\/version>.*/\\1/p" | tr -d '[:space:]')
       echo \${pomVersion}
       majorVersion=\$(echo \${pomVersion} | cut -d'.' -f1)       
       minorVersion=\$(echo \${pomVersion} | cut -d'.' -f3)
       patchVersion=\$(echo \${pomVersion} | cut -d'.' -f2)     
       currentMinorVersion=\$(cat /app/jenkins/workspace/test/minor-version.txt | tr -d '[:space:]')
       echo \$currentMinorVersion
       buildNumber=1       
       if [ "\${currentMinorVersion}" != "\${minorVersion}" ]; then
          echo "\${minorVersion}" > /app/jenkins/workspace/test/minor-version.txt          
       else
          buildNumber=\$((\$(cat /app/jenkins/workspace/test/build-number.txt | tr -d '[:space:]') + 1))
        fi
        echo "\${buildNumber}" > /app/jenkins/workspace/test/build-number.txt
        dockerTag="\${pomVersion}-v\${buildNumber}"
        echo RELEASE\$dockerTag
        #mvn clean package
        #docker build -t padamkiran/mytomcat:\${dockerTag} .
        #cat ./mypassword.txt | docker login --username padamkiran --password-stdin
        #docker push padamkiran/mytomcat:\${dockerTag}
        #docker rmi padamkiran/mytomcat:\${dockerTag}
        #docker logout
    """    
}
            }
        }       
    }
}
